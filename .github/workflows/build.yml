name: Build
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Tag version to release"
        required: true
  push:
    paths-ignore:
      - "docs/**"
      - "README.md"
      - ".github/ISSUE_TEMPLATE/**"
    branches:
      - master
    tags:
      - "v*"
  
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        jobs:
          - { goos: darwin, goarch: arm64, output: arm64 }
          - { goos: darwin, goarch: amd64, goamd64: v1, output: amd64-v1 }
          - { goos: darwin, goarch: amd64, goamd64: v3, output: amd64-v3 }

          - { goos: linux, goarch: '386', output: '386' }
          - { goos: linux, goarch: amd64, goamd64: v1, output: amd64-v1 }
          - { goos: linux, goarch: amd64, goamd64: v3, output: amd64-v3 }
          - { goos: linux, goarch: arm64, output: arm64}  
          - { goos: linux, goarch: loong64, output: loong64-abi1, abi: '1'}
          - { goos: linux, goarch: loong64, output: loong64-abi2, abi: '2'}
          - { goos: linux, goarch: riscv64, output: riscv64 }

          - { goos: windows, goarch: '386', output: '386' }
          - { goos: windows, goarch: amd64, goamd64: v1, output: amd64-v1 }
          - { goos: windows, goarch: amd64, goamd64: v3, output: amd64-v3 }
          - { goos: windows, goarch: arm64, output: arm64 }

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      if: ${{ matrix.jobs.goversion == '' && matrix.jobs.abi != '1' }}
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Set up Go1.24 loongarch abi1
      if: ${{ matrix.jobs.goarch == 'loong64' && matrix.jobs.abi == '1' }}
      run: |
        wget -q https://github.com/MetaCubeX/loongarch64-golang/releases/download/1.24.0/go1.24.0.linux-amd64-abi1.tar.gz
        sudo tar zxf go1.24.0.linux-amd64-abi1.tar.gz -C /usr/local
        echo "/usr/local/go/bin" >> $GITHUB_PATH

    - name: Revert Golang1.24 commit for Windows7/8
      if: ${{ matrix.jobs.goos == 'windows' }}
      run: |
        cd $(go env GOROOT)
        curl https://github.com/MetaCubeX/go/commit/2a406dc9f1ea7323d6ca9fccb2fe9ddebb6b1cc8.diff | patch --verbose -p 1
        curl https://github.com/MetaCubeX/go/commit/7b1fd7d39c6be0185fbe1d929578ab372ac5c632.diff | patch --verbose -p 1
        curl https://github.com/MetaCubeX/go/commit/979d6d8bab3823ff572ace26767fd2ce3cf351ae.diff | patch --verbose -p 1
        curl https://github.com/MetaCubeX/go/commit/ac3e93c061779dfefc0dd13a5b6e6f764a25621e.diff | patch --verbose -p 1

    - name: Build
      env:
        GOOS: ${{matrix.jobs.goos}}
        GOARCH: ${{matrix.jobs.goarch}}
        GOAMD64: ${{matrix.jobs.goamd64}}
        CGO_ENABLED: 0
      run: |
        go env
        if [ "${{ matrix.jobs.goos }}" == "windows" ]; then
          go build -ldflags "-extldflags --static -w -s -buildid=" -o sysproxy-${{matrix.jobs.goos}}-${{matrix.jobs.output}}.exe
        else
          go build -ldflags "-extldflags --static -w -s -buildid=" -o sysproxy-${{matrix.jobs.goos}}-${{matrix.jobs.output}}
        fi

    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: "${{ matrix.jobs.goos }}-${{ matrix.jobs.output }}"
        path: |
          sysproxy-${{ matrix.jobs.goos }}-${{ matrix.jobs.output }}*

  pre-release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
      with:
        path: bin/
        merge-multiple: true

    - name: Delete current release assets
      uses: 8Mi-Tech/delete-release-assets-action@main
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag: pre-release
        deleteOnlyFromDrafts: false

    - name: Tag Repo
      uses: richardsimko/update-tag@v1
      with:
        tag_name: pre-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish Prerelease
      uses: softprops/action-gh-release@v1
      if: ${{  success() }}
      with:
        tag_name: pre-release
        files: |
          bin/*
        prerelease: true

  release:
    if: startsWith(github.ref, 'refs/tags/v') || (github.event_name == 'workflow_dispatch' && github.event.inputs.version != '')
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: bin/
          merge-multiple: true

      - name: Delete Current
        uses: 8Mi-Tech/delete-release-assets-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.inputs.version != '' && github.event.inputs.version || github.ref }}
          deleteOnlyFromDrafts: false

      - name: Publish Release
        if: success()
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version != '' && github.event.inputs.version || github.ref }}
          files: |
            bin/*